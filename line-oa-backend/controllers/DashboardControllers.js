const db = require('../db');

// üìå ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢ ‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢ ‡∏Å‡∏≥‡πÑ‡∏£
const getDashboardData = async (req, res) => {
    try {
        const { startDate, endDate } = req.query;

        // console.log(`Fetching data from ${startDate} to ${endDate}`);

        // ‚úÖ ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏ß‡∏±‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
        const start = startDate ? `${startDate} 00:00:00` : "2000-01-01 00:00:00";
        const end = endDate ? `${endDate} 23:59:59` : "2099-12-31 23:59:59";

        // ‚úÖ ‡∏î‡∏∂‡∏á‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢ (Total Sales) ‚Üí JOIN Order_items ‡∏Å‡∏±‡∏ö Order
        const [totalSales] = await db.query(`
            SELECT COALESCE(SUM(oi.Quantity), 0) AS totalSales 
            FROM Order_item oi
            JOIN \`Order\` o ON oi.Order_id = o.Order_id
            WHERE o.created_at BETWEEN ? AND ?;
        `, [start, end]);

        // ‚úÖ ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö (Total Revenue)
        const [totalRevenue] = await db.query(`
            SELECT COALESCE(SUM(oi.Subtotal), 0) AS totalRevenue 
            FROM Order_item oi
            JOIN \`Order\` o ON oi.Order_id = o.Order_id
            WHERE o.created_at BETWEEN ? AND ?;
        `, [start, end]);

        // ‚úÖ ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢ (Total Expenses) ‚Üí ‡πÉ‡∏ä‡πâ `Create_at` ‡∏à‡∏≤‡∏Å `Ingredient_item`
        const [totalExpenses] = await db.query(`
            SELECT COALESCE(SUM(ii.Purchase_Price), 0) AS totalExpenses 
            FROM Ingredient_item ii
            WHERE ii.Create_at BETWEEN ? AND ?;
        `, [start, end]);

        // ‚úÖ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Å‡∏≥‡πÑ‡∏£ (Profit = Revenue - Expenses)
        const totalProfit = totalRevenue[0].totalRevenue - totalExpenses[0].totalExpenses;

        return res.status(200).json({
            totalSales: totalSales[0].totalSales,
            totalRevenue: totalRevenue[0].totalRevenue,
            totalExpenses: totalExpenses[0].totalExpenses,
            totalProfit: totalProfit,
        });

    } catch (error) {
        console.error("‚ùå Error fetching dashboard data:", error);
        return res.status(500).json({ message: "Error fetching dashboard data", error: error.message });
    }
};



module.exports = { getDashboardData };
