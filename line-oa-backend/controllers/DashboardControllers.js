const db = require('../db');

// üìå ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢ ‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢ ‡∏Å‡∏≥‡πÑ‡∏£
const getDashboardData = async (req, res) => {
  try {
    // ‚úÖ ‡∏î‡∏∂‡∏á‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢ (‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤)
    const [totalSales] = await db.query(`
            SELECT COALESCE(SUM(oi.Quantity), 0) AS totalSales 
            FROM Order_item oi;
        `);

    // ‚úÖ ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö (Total Revenue)
    const [totalRevenue] = await db.query(`
            SELECT COALESCE(SUM(oi.Subtotal), 0) AS totalRevenue 
            FROM Order_item oi;
        `);

    // ‚úÖ ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢ (Total Expenses)
    const [totalExpenses] = await db.query(`
            SELECT COALESCE(SUM(ii.Purchase_Price), 0) AS totalExpenses
            FROM Ingredient_item ii;
        `);

    // ‚úÖ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Å‡∏≥‡πÑ‡∏£ (Profit = Revenue - Expenses)
    const totalProfit =
      totalRevenue[0].totalRevenue - totalExpenses[0].totalExpenses;

    return res.status(200).json({
      totalSales: totalSales[0].totalSales,
      totalRevenue: totalRevenue[0].totalRevenue,
      totalExpenses: totalExpenses[0].totalExpenses,
      totalProfit: totalProfit,
    });
  } catch (error) {
    console.error("‚ùå Error fetching dashboard data:", error);
    return res.status(500).json({ message: "Error fetching dashboard data" });
  }
};

module.exports = { getDashboardData };
